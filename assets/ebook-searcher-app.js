eval("//# sourceURL=vendor/ember-cli/loader.js");

;eval("define(\"ebook-searcher-app/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"ebook-searcher-app/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix,\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, config.modulePrefix);\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=ebook-searcher-app/app.js");

;eval("define(\"ebook-searcher-app/components/blockly-basic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var BlocklyBasicComponent;\n\n    BlocklyBasicComponent = Ember.Component.extend({\n      tagName: \"div\",\n      classNames: [\"ember-blockly\"],\n      workspace: null,\n      allBlocks_Initial: null,\n      blockVisuals: Ember.A([]),\n      selectedBlockVisual: null,\n      didInsertElement: function() {\n        var block, j, len, ref, self, xml, xml_text;\n        self = this;\n        this.workspace = Blockly.inject(\"blocklyDiv\", {\n          media: \"media/\",\n          toolbox: self.$(\".blocky-basic-toolbox\").get(0)\n        });\n        this.workspace._parent = this;\n        this.addCustomBlockWithCodeGenerator_Itebooks_Datasource(this);\n        this.addCustomBlockWithCodeGenerator_Join_Datasource(this);\n        xml_text = this.get(\"blockToLoad\");\n        if (xml_text) {\n          xml = Blockly.Xml.textToDom(xml_text);\n          Blockly.Xml.domToWorkspace(this.workspace, xml);\n        }\n\n        /*		\n        		Blockly.Xml.domToWorkspace(\n        			@workspace, \n        			self.$(\'.blocky-basic-initial-blocks9\').get(0))\n         */\n        this.allBlocks_Initial = Blockly.mainWorkspace.getAllBlocks();\n        ref = this.allBlocks_Initial;\n        for (j = 0, len = ref.length; j < len; j++) {\n          block = ref[j];\n          Blockly.bindEvent_(block.getSvgRoot(), \"mouseup\", block, this.blockOnClick);\n          this.blockVisuals.pushObject(Ember.Object.create({\n            block: block\n          }));\n        }\n        return this.workspace.addChangeListener(this.workspaceOnModification);\n      },\n      actions: {\n        run: function() {\n          var code, error;\n          console.log(\"--- Clicked: Run Button ---\");\n          window.LoopTrap = 1000;\n          Blockly.JavaScript.INFINITE_LOOP_TRAP = \"if (--window.LoopTrap == 0) throw \\\"Infinite loop.\\\";\\n\";\n          code = Blockly.JavaScript.workspaceToCode(this.workspace);\n          Blockly.JavaScript.INFINITE_LOOP_TRAP = null;\n          try {\n            return eval(code);\n          } catch (_error) {\n            error = _error;\n            return alert(error);\n          }\n        },\n        show_Code: function() {\n          var code;\n          console.log(\"--- Clicked: ShowCode Button ---\");\n          Blockly.JavaScript.INFINITE_LOOP_TRAP = null;\n          code = Blockly.JavaScript.workspaceToCode(this.workspace);\n          return alert(code);\n        },\n        show_WorkspaceAsXml: function() {\n          var xml, xml_text;\n          console.log(\"--- Clicked: ShowWorkspace Button ---\");\n          xml = Blockly.Xml.workspaceToDom(this.workspace);\n          xml_text = Blockly.Xml.domToText(xml);\n          console.log(xml_text);\n          return alert(xml_text);\n        }\n      },\n      blockOnClick: function() {\n        var parent, selectedItem;\n        if (Blockly.selected.id === this.id) {\n          parent = Blockly.mainWorkspace._parent;\n          selectedItem = parent.blockVisuals.findBy(\"block.id\", Blockly.selected.id);\n          selectedItem.block._outputModel = Ember.A([]);\n          selectedItem.block._isChildernRouteLoaded = false;\n          return parent.set(\"selectedBlockVisual\", selectedItem);\n        }\n      },\n      workspaceOnModification: function() {\n        var allBlocks_Latest, deletedBlock, id, j, len, newBlock, parent, ref;\n        allBlocks_Latest = Blockly.mainWorkspace.getAllBlocks();\n        parent = Blockly.mainWorkspace._parent;\n        if (allBlocks_Latest.length === parent.allBlocks_Initial.length) {\n\n        } else if (allBlocks_Latest.length > parent.allBlocks_Initial.length) {\n          newBlock = Blockly.selected;\n          Blockly.bindEvent_(newBlock.getSvgRoot(), \"mouseup\", newBlock, parent.blockOnClick);\n          parent.allBlocks_Initial.push(newBlock);\n          return parent.blockVisuals.pushObject(Ember.Object.create({\n            block: newBlock\n          }));\n        } else if (allBlocks_Latest.length < parent.allBlocks_Initial.length) {\n          ref = parent.allBlocks_Initial.getEach(\"id\");\n          for (j = 0, len = ref.length; j < len; j++) {\n            id = ref[j];\n            if (!allBlocks_Latest.findBy(\"id\", id)) {\n              deletedBlock = parent.allBlocks_Initial.findBy(\"id\", id);\n              parent.blockVisuals.removeObject(parent.blockVisuals.findBy(\"block.id\", deletedBlock.id));\n              parent.set(\"selectedBlockVisual\", null);\n            }\n          }\n          return parent.allBlocks_Initial = allBlocks_Latest;\n        }\n      },\n      addCustomBlockWithCodeGenerator_Itebooks_Datasource: function(context) {\n        Blockly.Blocks[\"it-ebooks_datasource\"] = {\n          init: function() {\n            this.appendDummyInput().appendField(new Blockly.FieldImage(\"media/icons/ebook_icon.png\", 30, 30, \"ebook_icon\")).appendField(\"IT eBooks - Datasource\");\n            this.appendDummyInput().setAlign(Blockly.ALIGN_RIGHT).appendField(\"Title / Author Search:\").appendField(new Blockly.FieldTextInput(\"HTML5\"), \"SEARCH_STRING\");\n            this.setOutput(true);\n            this.setColour(290);\n            this.setTooltip(\"Search eBooks on http://it-ebooks.info\");\n            return this.setHelpUrl(\"\");\n          }\n        };\n        return Blockly.JavaScript[\"it-ebooks_datasource\"] = function(block) {\n          var code, text_search_string, theUrl;\n          text_search_string = block.getFieldValue(\"SEARCH_STRING\");\n          theUrl = \"http://it-ebooks-api.info/v1/search/restful\";\n          code = \"var xmlHttp = new XMLHttpRequest();\" + \"xmlHttp.open( \'GET\', \'http://it-ebooks-api.info/v1/search/restful\', false );\" + \"xmlHttp.send( null );\" + \"var response = xmlHttp.responseText;\";\n          return [code, Blockly.JavaScript.ORDER_NONE];\n        };\n      },\n      addCustomBlockWithCodeGenerator_Join_Datasource: function(context) {\n        return Blockly.Blocks[\"join_datasource\"] = {\n          init: function() {\n            this.itemCount_ = 2;\n            this.updateShape_();\n            this.setOutput(true, \"String\");\n            this.setMutator(new Blockly.Mutator([\"text_create_join_item\"]));\n            this.setColour(290);\n            this.setTooltip(\"Combine several datasources output together\");\n            return this.setHelpUrl(\"\");\n          },\n\n          /*\n          			 * Create XML to represent number of text inputs.\n          			 * @return {Element} XML storage element.\n          			 * @this Blockly.Block\n           */\n          mutationToDom: function() {\n            var container;\n            container = document.createElement(\"mutation\");\n            container.setAttribute(\"items\", this.itemCount_);\n            return container;\n          },\n\n          /*\n          			 * Parse XML to restore the text inputs.\n          			 * @param {!Element} xmlElement XML storage element.\n          			 * @this Blockly.Block\n           */\n          domToMutation: function(xmlElement) {\n            this.itemCount_ = parseInt(xmlElement.getAttribute(\"items\"), 10);\n            return this.updateShape_();\n          },\n\n          /*\n          			 * Populate the mutator\'s dialog with this block\'s components.\n          			 * @param {!Blockly.Workspace} workspace Mutator\'s workspace.\n          			 * @return {!Blockly.Block} Root block in mutator.\n          			 * @this Blockly.Block\n           */\n          decompose: function(workspace) {\n            var connection, containerBlock, itemBlock, j, num, ref;\n            containerBlock = Blockly.Block.obtain(workspace, \"text_create_join_container\");\n            containerBlock.initSvg();\n            connection = containerBlock.getInput(\"STACK\").connection;\n            for (num = j = 0, ref = this.itemCount_ - 1; 0 <= ref ? j <= ref : j >= ref; num = 0 <= ref ? ++j : --j) {\n              itemBlock = Blockly.Block.obtain(workspace, \"text_create_join_item\");\n              itemBlock.initSvg();\n              connection.connect(itemBlock.previousConnection);\n              connection = itemBlock.nextConnection;\n            }\n            return containerBlock;\n          },\n\n          /*\n          			 * Reconfigure this block based on the mutator dialog\'s components.\n          			 * @param {!Blockly.Block} containerBlock Root block in mutator.\n          			 * @this Blockly.Block\n           */\n          compose: function(containerBlock) {\n            var connections, i, itemBlock, j, num, ref, results;\n            itemBlock = containerBlock.getInputTargetBlock(\"STACK\");\n            connections = [];\n            i = 0;\n            while (itemBlock) {\n              connections[i] = itemBlock.valueConnection_;\n              itemBlock = itemBlock.nextConnection && itemBlock.nextConnection.targetBlock();\n              i++;\n            }\n            this.itemCount_ = i;\n            this.updateShape_();\n            results = [];\n            for (num = j = 0, ref = this.itemCount_ - 1; 0 <= ref ? j <= ref : j >= ref; num = 0 <= ref ? ++j : --j) {\n              if (connections[num]) {\n                results.push(this.getInput(\"ADD\" + num).connection.connect(connections[num]));\n              } else {\n                results.push(void 0);\n              }\n            }\n            return results;\n          },\n\n          /*\n          			 * Store pointers to any connected child blocks.\n          			 * @param {!Blockly.Block} containerBlock Root block in mutator.\n          			 * @this Blockly.Block\n           */\n          saveConnections: function(containerBlock) {\n            var i, input, itemBlock, results;\n            itemBlock = containerBlock.getInputTargetBlock(\"STACK\");\n            i = 0;\n            results = [];\n            while (itemBlock) {\n              input = this.getInput(\"ADD\" + i);\n              itemBlock.valueConnection_ = input && input.connection.targetConnection;\n              itemBlock = itemBlock.nextConnection && itemBlock.nextConnection.targetBlock();\n              results.push(i++);\n            }\n            return results;\n          },\n\n          /*\n          			 * Modify this block to have the correct number of inputs.\n          			 * @private\n          			 * @this Blockly.Block\n           */\n          updateShape_: function() {\n            var i, input, j, num, ref, results;\n            if (this.getInput(\"EMPTY\")) {\n              this.removeInput(\"EMPTY\");\n            } else {\n              i = 0;\n              while (this.getInput(\"ADD\" + i)) {\n                this.removeInput(\"ADD\" + i);\n                i++;\n              }\n            }\n            if (this.itemCount_ === 0) {\n              return this.appendDummyInput(\"EMPTY\").appendField(this.newQuote_(true)).appendField(this.newQuote_(false));\n            } else {\n              results = [];\n              for (num = j = 0, ref = this.itemCount_ - 1; 0 <= ref ? j <= ref : j >= ref; num = 0 <= ref ? ++j : --j) {\n                input = this.appendValueInput(\"ADD\" + num);\n                if (num === 0) {\n                  results.push(input.appendField(\"Join - Datasource\"));\n                } else {\n                  results.push(void 0);\n                }\n              }\n              return results;\n            }\n          }\n        };\n      },\n      blockVisualsContentChanged: (function() {\n        var blockToSelect;\n        if (this.selectedBlockVisual) {\n          blockToSelect = this.allBlocks_Initial.findBy(\"id\", this.selectedBlockVisual.block.id);\n          blockToSelect.select();\n          return this.get(\"currentController\").transitionToRoute(blockToSelect.type, this.selectedBlockVisual.block.id);\n        } else {\n          return this.get(\"currentController\").transitionToRoute(\"index\");\n        }\n      }).observes(\"selectedBlockVisual\"),\n      blockToLoadChanged: (function() {\n        var block, j, len, ref, results, xml, xml_text;\n        Blockly.mainWorkspace.clear();\n        xml_text = this.get(\"currentController.blockToLoad\");\n        if (xml_text) {\n          xml = Blockly.Xml.textToDom(xml_text);\n          Blockly.Xml.domToWorkspace(this.workspace, xml);\n          this.allBlocks_Initial = Blockly.mainWorkspace.getAllBlocks();\n          ref = this.allBlocks_Initial;\n          results = [];\n          for (j = 0, len = ref.length; j < len; j++) {\n            block = ref[j];\n            Blockly.bindEvent_(block.getSvgRoot(), \"mouseup\", block, this.blockOnClick);\n            results.push(this.blockVisuals.pushObject(Ember.Object.create({\n              block: block\n            })));\n          }\n          return results;\n        }\n      }).observes(\"currentController.blockToLoad\")\n    });\n\n    __exports__[\"default\"] = BlocklyBasicComponent;\n  });//# sourceURL=ebook-searcher-app/components/blockly-basic.js");

;eval("define(\"ebook-searcher-app/controllers/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ApplicationController;\n\n    ApplicationController = Ember.Controller.extend({\n      selectedeBook: null,\n      selectedDatasourceType: null,\n      datasourceTypes: [\n        Ember.Object.create({\n          title: \"Cloud\"\n        }), Ember.Object.create({\n          title: \"Mockup\"\n        })\n      ],\n      blockToLoad: null,\n      actions: {\n        goTo_IndexPage: function() {\n          return this.transitionToRoute(\"index\");\n        },\n        load_Example0: function() {\n          this.set(\"blockToLoad\", null);\n          return this.set(\"blockToLoad\", \"<xml xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><block type=\\\"it-ebooks_datasource\\\" id=\\\"1\\\" x=\\\"16\\\" y=\\\"5\\\"><field name=\\\"SEARCH_STRING\\\">HTML5</field></block></xml>\");\n        },\n        load_Example1: function() {\n          this.set(\"blockToLoad\", null);\n          return this.set(\"blockToLoad\", \"<xml xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><block type=\\\"join_datasource\\\" id=\\\"1\\\" x=\\\"16\\\" y=\\\"5\\\"><mutation items=\\\"4\\\"></mutation><value name=\\\"ADD0\\\"><block type=\\\"it-ebooks_datasource\\\" id=\\\"2\\\"><field name=\\\"SEARCH_STRING\\\">HTML5</field></block></value><value name=\\\"ADD1\\\"><block type=\\\"it-ebooks_datasource\\\" id=\\\"3\\\"><field name=\\\"SEARCH_STRING\\\">Java</field></block></value><value name=\\\"ADD2\\\"><block type=\\\"it-ebooks_datasource\\\" id=\\\"4\\\"><field name=\\\"SEARCH_STRING\\\">CoffeeScript</field></block></value><value name=\\\"ADD3\\\"><block type=\\\"it-ebooks_datasource\\\" id=\\\"5\\\"><field name=\\\"SEARCH_STRING\\\">Scala</field></block></value></block></xml>\");\n        },\n        load_Example2: function() {\n          this.set(\"blockToLoad\", null);\n          return this.set(\"blockToLoad\", \"<xml xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><block type=\\\"join_datasource\\\" id=\\\"1\\\" x=\\\"16\\\" y=\\\"5\\\"><mutation items=\\\"3\\\"></mutation><value name=\\\"ADD0\\\"><block type=\\\"it-ebooks_datasource\\\" id=\\\"2\\\"><field name=\\\"SEARCH_STRING\\\">REST</field></block></value><value name=\\\"ADD1\\\"><block type=\\\"it-ebooks_datasource\\\" id=\\\"3\\\"><field name=\\\"SEARCH_STRING\\\">Single Page</field></block></value><value name=\\\"ADD2\\\"><block type=\\\"join_datasource\\\" id=\\\"4\\\"><mutation items=\\\"2\\\"></mutation><value name=\\\"ADD0\\\"><block type=\\\"it-ebooks_datasource\\\" id=\\\"5\\\"><field name=\\\"SEARCH_STRING\\\">CoffeeScript</field></block></value><value name=\\\"ADD1\\\"><block type=\\\"it-ebooks_datasource\\\" id=\\\"6\\\"><field name=\\\"SEARCH_STRING\\\">HTML5</field></block></value></block></value></block></xml>\");\n        },\n        load_Example3: function() {\n          this.set(\"blockToLoad\", null);\n          return this.set(\"blockToLoad\", \"<xml xmlns=\\\"http://www.w3.org/1999/xhtml\\\"><block type=\\\"join_datasource\\\" id=\\\"1\\\" x=\\\"16\\\" y=\\\"5\\\"><mutation items=\\\"2\\\"></mutation><value name=\\\"ADD0\\\"><block type=\\\"join_datasource\\\" id=\\\"2\\\"><mutation items=\\\"2\\\"></mutation><value name=\\\"ADD0\\\"><block type=\\\"it-ebooks_datasource\\\" id=\\\"3\\\"><field name=\\\"SEARCH_STRING\\\">HTML5</field></block></value></block></value><value name=\\\"ADD1\\\"><block type=\\\"join_datasource\\\" id=\\\"4\\\"><mutation items=\\\"2\\\"></mutation><value name=\\\"ADD0\\\"><block type=\\\"it-ebooks_datasource\\\" id=\\\"5\\\"><field name=\\\"SEARCH_STRING\\\">CSS</field></block></value></block></value></block></xml>\");\n        }\n      }\n    });\n\n    __exports__[\"default\"] = ApplicationController;\n  });//# sourceURL=ebook-searcher-app/controllers/application.js");

;eval("define(\"ebook-searcher-app/controllers/it-ebooks-datasource\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ItEbooksDatasourceController;\n\n    ItEbooksDatasourceController = Ember.Controller.extend({\n      needs: [\"application\"],\n      selectedBookChanged: (function() {\n        return this.set(\"controllers.application.selectedeBook\", this.selectedbook);\n      }).observes(\"selectedbook\")\n    });\n\n    __exports__[\"default\"] = ItEbooksDatasourceController;\n  });//# sourceURL=ebook-searcher-app/controllers/it-ebooks-datasource.js");

;eval("define(\"ebook-searcher-app/controllers/join-datasource\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var JoinDatasourceController;\n\n    JoinDatasourceController = Ember.Controller.extend({\n      needs: [\"application\"],\n      selectedBookChanged: (function() {\n        return this.set(\"controllers.application.selectedeBook\", this.selectedbook);\n      }).observes(\"selectedbook\")\n    });\n\n    __exports__[\"default\"] = JoinDatasourceController;\n  });//# sourceURL=ebook-searcher-app/controllers/join-datasource.js");

;eval("define(\"ebook-searcher-app/initializers/export-application-global\", \n  [\"ember\",\"ebook-searcher-app/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    function initialize(container, application) {\n      if (config.exportApplicationGlobal !== false) {\n        var value = config.exportApplicationGlobal;\n        var globalName;\n\n        if (typeof value === \"string\") {\n          globalName = value;\n        } else {\n          globalName = Ember.String.classify(config.modulePrefix);\n        }\n\n        if (!window[globalName]) {\n          window[globalName] = application;\n\n          application.reopen({\n            willDestroy: function(){\n              this._super.apply(this, arguments);\n              delete window[globalName];\n            }\n          });\n        }\n      }\n    };\n    __exports__.initialize = initialize;\n    __exports__[\"default\"] = {\n      name: \"export-application-global\",\n\n      initialize: initialize\n    };\n  });//# sourceURL=ebook-searcher-app/initializers/export-application-global.js");

;eval("define(\"ebook-searcher-app/router\", \n  [\"ember\",\"ebook-searcher-app/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n    var Router;\n\n    Router = Ember.Router.extend({\n      location: config.locationType\n    });\n\n    Router.map(function() {\n      this.route(\"text_print\", {\n        path: \"/text_print/:block\"\n      });\n      this.route(\"text\", {\n        path: \"/text/:block\"\n      });\n      this.route(\"it-ebooks_datasource\", {\n        path: \"/it-ebooks_datasource/:block_id\"\n      });\n      return this.route(\"join_datasource\", {\n        path: \"/join_datasource/:block_id\"\n      });\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=ebook-searcher-app/router.js");

;eval("define(\"ebook-searcher-app/routes/it-ebooks-datasource\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var ItEbooksDatasourceRoute, mockupRESTCall_SearchBooks_Async;\n\n    mockupRESTCall_SearchBooks_Async = function(books, numOfBooksToMockup, searchString) {\n      return new Ember.RSVP.Promise(function(resolve) {\n        return Ember.run.later(books, (function() {\n          var i, j, ref;\n          for (i = j = 1, ref = numOfBooksToMockup; 1 <= ref ? j <= ref : j >= ref; i = 1 <= ref ? ++j : --j) {\n            books.pushObject(Ember.Object.create({\n              title: \"Title: \" + searchString + \"_Book\" + i,\n              id: i,\n              description: \"None\",\n              image: \"None\",\n              subtitle: \"None\",\n              isbn: \"None\"\n            }));\n          }\n          return resolve(books);\n        }), 500);\n      });\n    };\n\n    ItEbooksDatasourceRoute = Ember.Route.extend({\n      datasourceType: {\n        title: \"Cloud\"\n      },\n      _totalNumOfAvailableBooks: 0,\n      beforeModel: function(transition) {\n        var applicationController, block, params;\n        applicationController = transition.handlerInfos.findBy(\"name\", \"application\").handler.controller;\n        if (applicationController.get(\"selectedDatasourceType\") !== void 0) {\n          this.datasourceType = applicationController.get(\"selectedDatasourceType\");\n        }\n        params = this.paramsFor(transition.targetName);\n        block = Blockly.Block.getById(params.block_id, Blockly.selected.workspace);\n        this._block = block;\n        block._emberContext = this;\n        this._searchString = block.getFieldValue(\"SEARCH_STRING\");\n        return this._url = \"http://it-ebooks-api.info/v1/search/\" + this._searchString + \"/page/1\";\n      },\n      model: function(params) {\n        var books, dataset, numOfBooksToMockup, self;\n        if (this.datasourceType.title === \"Mockup\") {\n          this.set(\"_totalNumOfAvailableBooks\", 0);\n          self = this;\n          numOfBooksToMockup = 10;\n          dataset = Ember.A([]);\n          return mockupRESTCall_SearchBooks_Async(dataset, numOfBooksToMockup, self._searchString).then(function(data) {\n            self.set(\"_totalNumOfAvailableBooks\", data.length);\n            self._block._totalAvailable = data.length;\n            self._block._outputModel = data;\n            return data;\n          });\n        } else if (this.datasourceType.title === \"Cloud\") {\n          this.set(\"_totalNumOfAvailableBooks\", 0);\n          books = Ember.A([]);\n          self = this;\n          return Ember.$.getJSON(this._url).then(function(response) {\n            if (response.Books !== void 0) {\n              response.Books.map(function(book) {\n                return books.pushObject(Ember.Object.create({\n                  title: book.Title,\n                  id: book.ID,\n                  description: book.Description,\n                  image: book.Image,\n                  subtitle: book.SubTitle,\n                  isbn: book.isbn\n                }));\n              });\n            }\n            self.set(\"_totalNumOfAvailableBooks\", parseInt(response.Total));\n            self._block._totalAvailable = parseInt(response.Total);\n            self._block._outputModel = books;\n            return books;\n          });\n        }\n      },\n      setupController: function(controller, model) {\n        var pagenatedCountVsTotal;\n        controller.set(\"block\", this._block);\n        controller.set(\"model\", model);\n        if (model.length > 0) {\n          controller.set(\"selectedbook\", model[0]);\n        }\n        controller.set(\"totalAvailable\", this._totalNumOfAvailableBooks);\n        pagenatedCountVsTotal = controller.model.length + \" / \" + this._totalNumOfAvailableBooks;\n        return controller.set(\"pagenatedCountVsTotal\", pagenatedCountVsTotal);\n      }\n    });\n\n    __exports__[\"default\"] = ItEbooksDatasourceRoute;\n  });//# sourceURL=ebook-searcher-app/routes/it-ebooks-datasource.js");

;eval("define(\"ebook-searcher-app/routes/join-datasource\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var JoinDatasourceRoute;\n\n    JoinDatasourceRoute = Ember.Route.extend({\n      _totalAvailable_ChildOutputItems: 0,\n      beforeModel: function(transition) {\n        var childBlock, i, j, k, len, len1, len2, params, ref, ref1, ref2, results, results1;\n        params = this.paramsFor(transition.targetName);\n        this.block = Blockly.Block.getById(params.block_id, Blockly.selected.workspace);\n        this.block._emberContext = this;\n        if (this.block.childBlocks_.length > 0) {\n          if (!this.block._isChildernRouteLoaded) {\n            this.block._isChildernRouteLoaded = true;\n            ref = this.block.childBlocks_;\n            for (i = 0, len = ref.length; i < len; i++) {\n              childBlock = ref[i];\n              delete childBlock._outputModel;\n            }\n            ref1 = this.block.childBlocks_;\n            results = [];\n            for (j = 0, len1 = ref1.length; j < len1; j++) {\n              childBlock = ref1[j];\n              this.routeToChildBlockAndRouteToThisBack(childBlock, this);\n              break;\n            }\n            return results;\n          } else {\n            ref2 = this.block.childBlocks_;\n            results1 = [];\n            for (k = 0, len2 = ref2.length; k < len2; k++) {\n              childBlock = ref2[k];\n              if (!childBlock._outputModel) {\n                this.routeToChildBlockAndRouteToThisBack(childBlock, this);\n                break;\n              } else {\n                results1.push(void 0);\n              }\n            }\n            return results1;\n          }\n        }\n      },\n      model: function(params) {\n        var aggregatedModels, childBlock, i, len, ref, total;\n        aggregatedModels = Ember.A([]);\n        this.set(\"_totalAvailable_ChildOutputItems\", 0);\n        ref = this.block.childBlocks_;\n        for (i = 0, len = ref.length; i < len; i++) {\n          childBlock = ref[i];\n          if (childBlock._outputModel) {\n            aggregatedModels.pushObjects(childBlock._outputModel);\n            total = childBlock._totalAvailable + this._totalAvailable_ChildOutputItems;\n            this.set(\"_totalAvailable_ChildOutputItems\", total);\n            this.block._totalAvailable = total;\n          }\n        }\n        this.block._outputModel = aggregatedModels;\n        return aggregatedModels;\n      },\n      setupController: function(controller, model) {\n        var pagenatedCountVsTotal;\n        controller.set(\"block\", this.block);\n        controller.set(\"model\", model);\n        if (model.length > 0) {\n          controller.set(\"selectedbook\", model[0]);\n        }\n        controller.set(\"totalAvailable\", this._totalAvailable_ChildOutputItems);\n        pagenatedCountVsTotal = controller.model.length + \" / \" + this._totalAvailable_ChildOutputItems;\n        controller.set(\"pagenatedCountVsTotal\", pagenatedCountVsTotal);\n        this.block._isChildernRouteLoaded = false;\n        if (this.block.id !== Blockly.selected.id) {\n          if (this.block.parentBlock_ !== null) {\n            return controller.transitionToRoute(this.block.parentBlock_.type, this.block.parentBlock_.id);\n          }\n        }\n      },\n      routeToChildBlockAndRouteToThisBack: function(childBlock, self) {\n        return new Ember.RSVP.Promise(function(resolve) {\n          return Ember.run(function() {\n            return self.transitionTo(childBlock.type, childBlock.id).then(function() {\n              return resolve(self.transitionTo(self.block.type, self.block.id));\n            });\n          });\n        });\n      }\n    });\n\n    __exports__[\"default\"] = JoinDatasourceRoute;\n  });//# sourceURL=ebook-searcher-app/routes/join-datasource.js");

;eval("define(\"ebook-searcher-app/routes/text-print\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var TextPrintRoute;\n\n    TextPrintRoute = Ember.Route.extend();\n\n    __exports__[\"default\"] = TextPrintRoute;\n  });//# sourceURL=ebook-searcher-app/routes/text-print.js");

;eval("define(\"ebook-searcher-app/routes/text\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var TextRoute;\n\n    TextRoute = Ember.Route.extend({\n      setupController: function(controller, model) {\n        return controller.set(\"model\", model);\n      }\n    });\n\n    __exports__[\"default\"] = TextRoute;\n  });//# sourceURL=ebook-searcher-app/routes/text.js");

;eval("define(\"ebook-searcher-app/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n\\n		\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'type\': (\"default\"),\n        \'clicked\': (\"goTo_IndexPage\"),\n        \'icon\': (\"glyphicon glyphicon-erase\")\n      },hashTypes:{\'type\': \"STRING\",\'clicked\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'type\': depth0,\'clicked\': depth0,\'icon\': depth0},inverse:self.noop,fn:self.program(2, program2, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"		\\n\\n		\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n	\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n			Clear\\n		\");\n      }\n\n    function program4(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n\\n		\");\n      data.buffer.push(escapeExpression((helper = helpers[\'blockly-basic\'] || (depth0 && depth0[\'blockly-basic\']),options={hash:{\n        \'currentControllerBinding\': (\"controller\"),\n        \'blockToLoadBinding\': (\"blockToLoad\")\n      },hashTypes:{\'currentControllerBinding\': \"STRING\",\'blockToLoadBinding\': \"STRING\"},hashContexts:{\'currentControllerBinding\': depth0,\'blockToLoadBinding\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"blockly-basic\", options))));\n      data.buffer.push(\"\\n\\n	\");\n      return buffer;\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n\\n		\");\n      stack1 = (helper = helpers[\'bs-panel\'] || (depth0 && depth0[\'bs-panel\']),options={hash:{\n        \'heading\': (\"eBook Info\"),\n        \'type\': (\"info\")\n      },hashTypes:{\'heading\': \"STRING\",\'type\': \"STRING\"},hashContexts:{\'heading\': depth0,\'type\': depth0},inverse:self.noop,fn:self.program(7, program7, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-panel\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n	\");\n      return buffer;\n      }\n    function program7(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n\\n			<div class = \\\"jumbotron\\\">\\n\\n				<div class = \\\"container\\\">\\n\\n				  <img \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'src\': (\"selectedeBook.image\")\n      },hashTypes:{\'src\': \"ID\"},hashContexts:{\'src\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\"\\n				       alt = \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'src\': (\"selectedeBook.image\")\n      },hashTypes:{\'src\': \"ID\"},hashContexts:{\'src\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n				  <h1>\");\n      stack1 = helpers._triageMustache.call(depth0, \"selectedeBook.title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h1>\\n				  <p><b>ISBN</b>: \");\n      stack1 = helpers._triageMustache.call(depth0, \"selectedeBook.isbn\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n				  <p>\");\n      stack1 = helpers._triageMustache.call(depth0, \"selectedeBook.description\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</p>\\n\\n				</div>\\n\\n			</div>\\n\\n		\");\n      return buffer;\n      }\n\n    function program9(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n\\n		\");\n      stack1 = (helper = helpers[\'bs-panel\'] || (depth0 && depth0[\'bs-panel\']),options={hash:{\n        \'heading\': (\"Examples\"),\n        \'collapsible\': (true),\n        \'open\': (true)\n      },hashTypes:{\'heading\': \"STRING\",\'collapsible\': \"BOOLEAN\",\'open\': \"BOOLEAN\"},hashContexts:{\'heading\': depth0,\'collapsible\': depth0,\'open\': depth0},inverse:self.noop,fn:self.program(10, program10, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-panel\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n		\");\n      stack1 = (helper = helpers[\'bs-panel\'] || (depth0 && depth0[\'bs-panel\']),options={hash:{\n        \'heading\': (\"RESTful Resource\"),\n        \'collapsible\': (true),\n        \'open\': (false)\n      },hashTypes:{\'heading\': \"STRING\",\'collapsible\': \"BOOLEAN\",\'open\': \"BOOLEAN\"},hashContexts:{\'heading\': depth0,\'collapsible\': depth0,\'open\': depth0},inverse:self.noop,fn:self.program(19, program19, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-panel\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n	\");\n      return buffer;\n      }\n    function program10(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n\\n			<div>\\n\\n				<b>Simple search:</b>\\n\\n				\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'type\': (\"default\"),\n        \'clicked\': (\"load_Example0\"),\n        \'icon\': (\"glyphicon glyphicon-education\")\n      },hashTypes:{\'type\': \"STRING\",\'clicked\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'type\': depth0,\'clicked\': depth0,\'icon\': depth0},inverse:self.noop,fn:self.program(11, program11, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n			</div>\\n\\n			<div>\\n\\n				<b>Search & aggregate:</b>\\n\\n				\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'type\': (\"default\"),\n        \'clicked\': (\"load_Example1\"),\n        \'icon\': (\"glyphicon glyphicon-education\")\n      },hashTypes:{\'type\': \"STRING\",\'clicked\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'type\': depth0,\'clicked\': depth0,\'icon\': depth0},inverse:self.noop,fn:self.program(13, program13, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n			</div>\\n\\n			<div>\\n\\n				<b>Cascaded aggregations:</b>\\n\\n				\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'type\': (\"default\"),\n        \'clicked\': (\"load_Example2\"),\n        \'icon\': (\"glyphicon glyphicon-education\")\n      },hashTypes:{\'type\': \"STRING\",\'clicked\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'type\': depth0,\'clicked\': depth0,\'icon\': depth0},inverse:self.noop,fn:self.program(15, program15, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n				\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'type\': (\"default\"),\n        \'clicked\': (\"load_Example3\"),\n        \'icon\': (\"glyphicon glyphicon-education\")\n      },hashTypes:{\'type\': \"STRING\",\'clicked\': \"STRING\",\'icon\': \"STRING\"},hashContexts:{\'type\': depth0,\'clicked\': depth0,\'icon\': depth0},inverse:self.noop,fn:self.program(17, program17, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n			</div>\\n\\n		\");\n      return buffer;\n      }\n    function program11(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n					Example 0\\n				\");\n      }\n\n    function program13(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n					Example 1\\n				\");\n      }\n\n    function program15(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n					Example 2\\n				\");\n      }\n\n    function program17(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n					Example 3\\n				\");\n      }\n\n    function program19(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n\\n			\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-btn-group\'] || (depth0 && depth0[\'bs-btn-group\']),options={hash:{\n        \'contentBinding\': (\"datasourceTypes\"),\n        \'selectedBinding\': (\"selectedDatasourceType\"),\n        \'default\': (\"Cloud\"),\n        \'icon_active\': (\"glyphicon glyphicon-play-circle\")\n      },hashTypes:{\'contentBinding\': \"STRING\",\'selectedBinding\': \"STRING\",\'default\': \"STRING\",\'icon_active\': \"STRING\"},hashContexts:{\'contentBinding\': depth0,\'selectedBinding\': depth0,\'default\': depth0,\'icon_active\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-btn-group\", options))));\n      data.buffer.push(\"\\n\\n		\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\\\"titlebackground\\\"></div>\\n\\n<div id=\\\"titlejumbotron\\\" class=\\\"jumbotron\\\">\\n\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-page-header\'] || (depth0 && depth0[\'bs-page-header\']),options={hash:{\n        \'title\': (\"eBook Searcher\"),\n        \'sub\': (\"App\")\n      },hashTypes:{\'title\': \"STRING\",\'sub\': \"STRING\"},hashContexts:{\'title\': depth0,\'sub\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-page-header\", options))));\n      data.buffer.push(\"\\n\\n</div>\\n\\n<div class=\\\"row\\\">\\n  \\n  <div class=\\\"col-md-3\\\">\\n\\n	\");\n      stack1 = (helper = helpers[\'bs-panel\'] || (depth0 && depth0[\'bs-panel\']),options={hash:{\n        \'heading\': (\"Search Results\")\n      },hashTypes:{\'heading\': \"STRING\"},hashContexts:{\'heading\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-panel\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n  </div>\\n\\n  <div class=\\\"col-md-7\\\">\\n\\n	\");\n      stack1 = (helper = helpers[\'bs-panel\'] || (depth0 && depth0[\'bs-panel\']),options={hash:{\n        \'heading\': (\"Block DSL Editor\")\n      },hashTypes:{\'heading\': \"STRING\"},hashContexts:{\'heading\': depth0},inverse:self.noop,fn:self.program(4, program4, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-panel\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n	\");\n      stack1 = helpers[\'if\'].call(depth0, \"selectedeBook\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n  </div>\\n\\n  <div class=\\\"col-md-2\\\">\\n\\n	\");\n      stack1 = (helper = helpers[\'bs-panel\'] || (depth0 && depth0[\'bs-panel\']),options={hash:{\n        \'heading\': (\"Action Palette\")\n      },hashTypes:{\'heading\': \"STRING\"},hashContexts:{\'heading\': depth0},inverse:self.noop,fn:self.program(9, program9, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-panel\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n  </div>\\n\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ebook-searcher-app/templates/application.js");

;eval("define(\"ebook-searcher-app/templates/components/blockly-basic\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n		Show Workspace - XML\\n	\");\n      }\n\n      data.buffer.push(\"<div>\\n	\");\n      stack1 = (helper = helpers[\'bs-button\'] || (depth0 && depth0[\'bs-button\']),options={hash:{\n        \'type\': (\"default\"),\n        \'clicked\': (\"show_WorkspaceAsXml\")\n      },hashTypes:{\'type\': \"STRING\",\'clicked\': \"STRING\"},hashContexts:{\'type\': depth0,\'clicked\': depth0},inverse:self.noop,fn:self.program(1, program1, data),contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-button\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\\n<div class=\\\"blocky-basic\\\"\\n	 id=\\\"blocklyDiv\\\">\\n</div>\\n\\n<xml class=\\\"blocky-basic-toolbox\\\">\\n	<category name=\\\"Text\\\">\\n		<block type=\\\"text_print\\\"></block>\\n		<block type=\\\"text\\\"></block>\\n    </category>\\n    \\n    <category name=\\\"Datasource\\\">\\n		<block type=\\\"it-ebooks_datasource\\\"></block>\\n		<block type=\\\"join_datasource\\\"></block>\\n    </category>\\n</xml>\\n\\n<xml class=\\\"blocky-basic-initial-blocks1\\\" style=\\\"display: none\\\">\\n    <block type=\\\"join_datasource\\\" id=\\\"1\\\" x=\\\"16\\\" y=\\\"0\\\">\\n    \\n		<mutation items=\\\"2\\\"></mutation>\\n		<value name=\\\"ADD0\\\">\\n			<block type=\\\"it-ebooks_datasource\\\" id=\\\"2\\\">\\n				<field name=\\\"SEARCH_STRING\\\">Queue</field>\\n			</block>\\n		</value>\\n		\\n		<value name=\\\"ADD1\\\">\\n			<block type=\\\"join_datasource\\\" id=\\\"3\\\">\\n				<mutation items=\\\"2\\\"></mutation>\\n				<value name=\\\"ADD0\\\">\\n					<block type=\\\"it-ebooks_datasource\\\" id=\\\"4\\\">\\n						<field name=\\\"SEARCH_STRING\\\">Groovy</field>\\n					</block>\\n				</value>\\n			</block>\\n		</value>\\n		\\n	</block>\\n</xml>\\n\\n<xml class=\\\"blocky-basic-initial-blocks2\\\" style=\\\"display: none\\\">\\n	<block type=\\\"join_datasource\\\" id=\\\"1\\\" x=\\\"23\\\" y=\\\"6\\\">\\n		<mutation items=\\\"2\\\"></mutation>\\n		<value name=\\\"ADD0\\\">\\n			<block type=\\\"join_datasource\\\" id=\\\"2\\\">\\n				<mutation items=\\\"4\\\"></mutation>\\n				<value name=\\\"ADD0\\\">\\n					<block type=\\\"it-ebooks_datasource\\\" id=\\\"3\\\">\\n						<field name=\\\"SEARCH_STRING\\\">HTML5</field>\\n					</block>\\n				</value>\\n				<value name=\\\"ADD1\\\">\\n					<block type=\\\"join_datasource\\\" id=\\\"4\\\">\\n						<mutation items=\\\"2\\\"></mutation>\\n					</block>\\n				</value>\\n				<value name=\\\"ADD2\\\">\\n					<block type=\\\"it-ebooks_datasource\\\" id=\\\"5\\\">\\n						<field name=\\\"SEARCH_STRING\\\">CoffeeScript</field>\\n					</block>\\n				</value>\\n				<value name=\\\"ADD3\\\">\\n					<block type=\\\"it-ebooks_datasource\\\" id=\\\"6\\\">\\n						<field name=\\\"SEARCH_STRING\\\">JavaScript</field>\\n					</block>\\n				</value>\\n			</block>\\n		</value>\\n		\\n	</block>\\n</xml>\\n\\n<xml class=\\\"blocky-basic-initial-blocks3\\\" style=\\\"display: none\\\">\\n	<block type=\\\"join_datasource\\\" id=\\\"1\\\" x=\\\"16\\\" y=\\\"0\\\">\\n		<mutation items=\\\"3\\\"></mutation>\\n		<value name=\\\"ADD0\\\">\\n			<block type=\\\"join_datasource\\\" id=\\\"2\\\">\\n				<mutation items=\\\"2\\\"></mutation>\\n					<value name=\\\"ADD0\\\">\\n						<block type=\\\"join_datasource\\\" id=\\\"3\\\">\\n							<mutation items=\\\"2\\\"></mutation>\\n						</block>\\n					</value>\\n			</block>\\n		</value>\\n	</block>\\n</xml>\\n\\n<xml class=\\\"blocky-basic-initial-blocks4\\\" style=\\\"display: none\\\">\\n	<block type=\\\"join_datasource\\\" id=\\\"1\\\" x=\\\"16\\\" y=\\\"0\\\">\\n		<mutation items=\\\"3\\\"></mutation>\\n			<value name=\\\"ADD0\\\">\\n				<block type=\\\"join_datasource\\\" id=\\\"2\\\">\\n					<mutation items=\\\"2\\\"></mutation>\\n					<value name=\\\"ADD0\\\">\\n						<block type=\\\"it-ebooks_datasource\\\" id=\\\"7\\\">\\n							<field name=\\\"SEARCH_STRING\\\">HTML5</field>\\n						</block>\\n					</value>\\n					<value name=\\\"ADD1\\\">\\n						<block type=\\\"it-ebooks_datasource\\\" id=\\\"10\\\">\\n							<field name=\\\"SEARCH_STRING\\\">Test</field>\\n						</block>\\n					</value>\\n				</block>\\n			</value>\\n			\\n			<value name=\\\"ADD1\\\">\\n				<block type=\\\"it-ebooks_datasource\\\" id=\\\"13\\\">\\n					<field name=\\\"SEARCH_STRING\\\">Java</field>\\n				</block>\\n			</value>\\n			\\n			<value name=\\\"ADD2\\\">\\n				<block type=\\\"join_datasource\\\" id=\\\"27\\\">\\n					<mutation items=\\\"2\\\"></mutation>\\n					<value name=\\\"ADD0\\\">\\n						<block type=\\\"it-ebooks_datasource\\\" id=\\\"36\\\">\\n							<field name=\\\"SEARCH_STRING\\\">123</field>\\n						</block>\\n					</value>\\n				</block>\\n			</value>\\n	</block>\\n</xml>\\n\\n<xml class=\\\"blocky-basic-initial-blocks5\\\" style=\\\"display: none\\\">\\n	<block type=\\\"join_datasource\\\" id=\\\"1\\\" x=\\\"16\\\" y=\\\"0\\\">\\n		<mutation items=\\\"3\\\"></mutation>\\n\\n		<value name=\\\"ADD0\\\">\\n			<block type=\\\"join_datasource\\\" id=\\\"2\\\">\\n				<mutation items=\\\"2\\\"></mutation>\\n				<value name=\\\"ADD0\\\">\\n					<block type=\\\"join_datasource\\\" id=\\\"3\\\">\\n						<mutation items=\\\"2\\\"></mutation>\\n					</block>\\n				</value>\\n			</block>\\n		</value>\\n	\\n		<value name=\\\"ADD1\\\">\\n			<block type=\\\"join_datasource\\\" id=\\\"4\\\">\\n				<mutation items=\\\"2\\\"></mutation>\\n			</block>\\n		</value>\\n	</block>\\n</xml>\\n\\n<xml class=\\\"blocky-basic-initial-blocks6\\\" style=\\\"display: none\\\">\\n	<block type=\\\"join_datasource\\\" id=\\\"1\\\" x=\\\"33\\\" y=\\\"20\\\">\\n		<mutation items=\\\"2\\\"></mutation>\\n			<value name=\\\"ADD0\\\">\\n				<block type=\\\"join_datasource\\\" id=\\\"2\\\">\\n					<mutation items=\\\"2\\\"></mutation>\\n				</block>\\n			</value>\\n			\\n			<value name=\\\"ADD1\\\">\\n				<block type=\\\"join_datasource\\\" id=\\\"3\\\">\\n					<mutation items=\\\"2\\\"></mutation>\\n				</block>\\n			</value>\\n	</block>\\n\\n	<block type=\\\"text_print\\\" id=\\\"12\\\" x=\\\"34\\\" y=\\\"162\\\"></block>\\n</xml>\\n\\n<xml class=\\\"blocky-basic-initial-blocks7\\\" style=\\\"display: none\\\">\\n	<block type=\\\"join_datasource\\\" id=\\\"1\\\" x=\\\"16\\\" y=\\\"5\\\">\\n		<mutation items=\\\"4\\\"></mutation>\\n		<value name=\\\"ADD0\\\">\\n			<block type=\\\"it-ebooks_datasource\\\" id=\\\"2\\\">\\n				<field name=\\\"SEARCH_STRING\\\">HTML5</field>\\n			</block>\\n		</value>\\n		<value name=\\\"ADD1\\\">\\n			<block type=\\\"it-ebooks_datasource\\\" id=\\\"3\\\">\\n				<field name=\\\"SEARCH_STRING\\\">Java</field>\\n			</block>\\n		</value>\\n		<value name=\\\"ADD2\\\">\\n			<block type=\\\"it-ebooks_datasource\\\" id=\\\"4\\\">\\n				<field name=\\\"SEARCH_STRING\\\">CoffeeScript</field>\\n			</block>\\n		</value>\\n		<value name=\\\"ADD3\\\">\\n			<block type=\\\"it-ebooks_datasource\\\" id=\\\"5\\\">\\n				<field name=\\\"SEARCH_STRING\\\">Scala</field>\\n			</block>\\n		</value>\\n	</block>\\n</xml>\\n\\n<xml class=\\\"blocky-basic-initial-blocks8\\\" style=\\\"display: none\\\">\\n	<block type=\\\"join_datasource\\\" id=\\\"1\\\" x=\\\"23\\\" y=\\\"6\\\">\\n		<mutation items=\\\"2\\\"></mutation>\\n		<value name=\\\"ADD0\\\">\\n			<block type=\\\"join_datasource\\\" id=\\\"2\\\">\\n				<mutation items=\\\"2\\\"></mutation>\\n				<value name=\\\"ADD0\\\">\\n					<block type=\\\"it-ebooks_datasource\\\" id=\\\"3\\\">\\n						<field name=\\\"SEARCH_STRING\\\">HTML5</field>\\n					</block>\\n				</value>\\n			</block>\\n		</value>\\n		<value name=\\\"ADD1\\\">\\n			<block type=\\\"join_datasource\\\" id=\\\"4\\\">\\n				<mutation items=\\\"2\\\"></mutation>\\n				<value name=\\\"ADD0\\\">\\n					<block type=\\\"it-ebooks_datasource\\\" id=\\\"5\\\">\\n						<field name=\\\"SEARCH_STRING\\\">Java</field>\\n					</block>\\n				</value>\\n			</block>\\n		</value>\\n	</block>\\n</xml>\\n\\n<xml class=\\\"blocky-basic-initial-blocks9\\\" style=\\\"display: none\\\">\\n	<block type=\\\"join_datasource\\\" id=\\\"21\\\" x=\\\"18\\\" y=\\\"38\\\">\\n		<mutation items=\\\"3\\\"></mutation>\\n		<value name=\\\"ADD0\\\">\\n			<block type=\\\"it-ebooks_datasource\\\" id=\\\"18\\\">\\n				<field name=\\\"SEARCH_STRING\\\">REST</field>\\n			</block>\\n		</value>\\n		<value name=\\\"ADD1\\\">\\n			<block type=\\\"it-ebooks_datasource\\\" id=\\\"28\\\">\\n				<field name=\\\"SEARCH_STRING\\\">Single Page</field>\\n			</block>\\n		</value>\\n		<value name=\\\"ADD2\\\">\\n			<block type=\\\"join_datasource\\\" id=\\\"38\\\">\\n				<mutation items=\\\"2\\\"></mutation>\\n				<value name=\\\"ADD0\\\">\\n					<block type=\\\"it-ebooks_datasource\\\" id=\\\"10\\\">\\n						<field name=\\\"SEARCH_STRING\\\">CoffeeScript</field>\\n					</block>\\n				</value>\\n				<value name=\\\"ADD1\\\">\\n					<block type=\\\"it-ebooks_datasource\\\" id=\\\"15\\\">\\n						<field name=\\\"SEARCH_STRING\\\">HTML5</field>\\n					</block>\\n				</value>\\n			</block>\\n		</value>\\n	</block>\\n</xml>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ebook-searcher-app/templates/components/blockly-basic.js");

;eval("define(\"ebook-searcher-app/templates/it-ebooks-datasource\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h3>\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-label\'] || (depth0 && depth0[\'bs-label\']),options={hash:{\n        \'content\': (\"it-ebooks_datasource\"),\n        \'type\': (\"primary\")\n      },hashTypes:{\'content\': \"STRING\",\'type\': \"STRING\"},hashContexts:{\'content\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-label\", options))));\n      data.buffer.push(\"\\n\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-badge\'] || (depth0 && depth0[\'bs-badge\']),options={hash:{\n        \'content\': (\"pagenatedCountVsTotal\")\n      },hashTypes:{\'content\': \"ID\"},hashContexts:{\'content\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-badge\", options))));\n      data.buffer.push(\"\\n</h3>\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-list-group\'] || (depth0 && depth0[\'bs-list-group\']),options={hash:{\n        \'contentBinding\': (\"model\"),\n        \'selectedBinding\': (\"selectedbook\")\n      },hashTypes:{\'contentBinding\': \"STRING\",\'selectedBinding\': \"STRING\"},hashContexts:{\'contentBinding\': depth0,\'selectedBinding\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-list-group\", options))));\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ebook-searcher-app/templates/it-ebooks-datasource.js");

;eval("define(\"ebook-searcher-app/templates/join-datasource\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h3>\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-label\'] || (depth0 && depth0[\'bs-label\']),options={hash:{\n        \'content\': (\"join_datasource\"),\n        \'type\': (\"primary\")\n      },hashTypes:{\'content\': \"STRING\",\'type\': \"STRING\"},hashContexts:{\'content\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-label\", options))));\n      data.buffer.push(\"\\n\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-badge\'] || (depth0 && depth0[\'bs-badge\']),options={hash:{\n        \'content\': (\"pagenatedCountVsTotal\")\n      },hashTypes:{\'content\': \"ID\"},hashContexts:{\'content\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-badge\", options))));\n      data.buffer.push(\"\\n</h3>\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-list-group\'] || (depth0 && depth0[\'bs-list-group\']),options={hash:{\n        \'contentBinding\': (\"model\"),\n        \'selectedBinding\': (\"selectedbook\")\n      },hashTypes:{\'contentBinding\': \"STRING\",\'selectedBinding\': \"STRING\"},hashContexts:{\'contentBinding\': depth0,\'selectedBinding\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-list-group\", options))));\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ebook-searcher-app/templates/join-datasource.js");

;eval("define(\"ebook-searcher-app/templates/loading\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<br>\\n<br>\\n\\n<div class=\\\"progress\\\">\\n\\n  <div	class=\\\"progress-bar progress-bar-striped active\\\"\\n	role=\\\"progressbar\\\"\\n	aria-valuenow=\\\"100\\\"\\n	aria-valuemin=\\\"0\\\"\\n	aria-valuemax=\\\"100\\\"\\n	style=\\\"width: 100%\\\">\\n	Loading...\\n  </div>\\n\\n</div>\\n\");\n      \n    });\n  });//# sourceURL=ebook-searcher-app/templates/loading.js");

;eval("define(\"ebook-searcher-app/templates/text-print\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h3>\\n	<strong>Block:</strong>\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-label\'] || (depth0 && depth0[\'bs-label\']),options={hash:{\n        \'content\': (\"Print_Text\"),\n        \'type\': (\"info\")\n      },hashTypes:{\'content\': \"STRING\",\'type\': \"STRING\"},hashContexts:{\'content\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-label\", options))));\n      data.buffer.push(\"\\n</h3>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ebook-searcher-app/templates/text-print.js");

;eval("define(\"ebook-searcher-app/templates/text\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data\n    /**/) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h3>\\n	<strong>Block:</strong>\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'bs-label\'] || (depth0 && depth0[\'bs-label\']),options={hash:{\n        \'content\': (\"Text\"),\n        \'type\': (\"info\")\n      },hashTypes:{\'content\': \"STRING\",\'type\': \"STRING\"},hashContexts:{\'content\': depth0,\'type\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"bs-label\", options))));\n      data.buffer.push(\"\\n</h3>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=ebook-searcher-app/templates/text.js");

;eval("define(\"ebook-searcher-app/tests/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - .\');\n    test(\'app.js should pass jshint\', function() { \n      ok(true, \'app.js should pass jshint.\'); \n    });\n  });//# sourceURL=ebook-searcher-app/tests/app.jshint.js");

;eval("define(\"ebook-searcher-app/tests/ebook-searcher-app/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ebook-searcher-app/tests/helpers\');\n    test(\'ebook-searcher-app/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'ebook-searcher-app/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=ebook-searcher-app/tests/ebook-searcher-app/tests/helpers/resolver.jshint.js");

;eval("define(\"ebook-searcher-app/tests/ebook-searcher-app/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ebook-searcher-app/tests/helpers\');\n    test(\'ebook-searcher-app/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'ebook-searcher-app/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=ebook-searcher-app/tests/ebook-searcher-app/tests/helpers/start-app.jshint.js");

;eval("define(\"ebook-searcher-app/tests/ebook-searcher-app/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - ebook-searcher-app/tests\');\n    test(\'ebook-searcher-app/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'ebook-searcher-app/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=ebook-searcher-app/tests/ebook-searcher-app/tests/test-helper.jshint.js");

;eval("define(\"ebook-searcher-app/tests/helpers/resolver\", \n  [\"ember/resolver\",\"ebook-searcher-app/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n    var config = __dependency2__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: config.modulePrefix,\n      podModulePrefix: config.podModulePrefix\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=ebook-searcher-app/tests/helpers/resolver.js");

;eval("define(\"ebook-searcher-app/tests/helpers/start-app\", \n  [\"ember\",\"ebook-searcher-app/app\",\"ebook-searcher-app/router\",\"ebook-searcher-app/config/environment\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __dependency4__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Application = __dependency2__[\"default\"];\n    var Router = __dependency3__[\"default\"];\n    var config = __dependency4__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({}, config.APP);\n      attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n      Ember.run(function() {\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      return App;\n    }\n  });//# sourceURL=ebook-searcher-app/tests/helpers/start-app.js");

;eval("define(\"ebook-searcher-app/tests/test-helper\", \n  [\"ebook-searcher-app/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\"<div id=\\\"ember-testing-container\\\"><div id=\\\"ember-testing\\\"></div></div>\");\n\n    QUnit.config.urlConfig.push({ id: \"nocontainer\", label: \"Hide container\"});\n    var containerVisibility = QUnit.urlParams.nocontainer ? \"hidden\" : \"visible\";\n    document.getElementById(\"ember-testing-container\").style.visibility = containerVisibility;\n  });//# sourceURL=ebook-searcher-app/tests/test-helper.js");

;eval("define(\"ebook-searcher-app/tests/unit/components/blockly-basic-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n    moduleForComponent(\"blockly-basic\", {});\n\n    test(\"it renders\", function(assert) {\n      var component;\n      assert.expect(2);\n      component = this.subject();\n      assert.equal(component._state, \"preRender\");\n      this.render();\n      return assert.equal(component._state, \"inDOM\");\n    });\n  });//# sourceURL=ebook-searcher-app/tests/unit/components/blockly-basic-test.js");

;eval("define(\"ebook-searcher-app/tests/unit/controllers/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\"controller:application\", {});\n\n    test(\"it exists\", function(assert) {\n      var controller;\n      controller = this.subject();\n      return assert.ok(controller);\n    });\n  });//# sourceURL=ebook-searcher-app/tests/unit/controllers/application-test.js");

;eval("define(\"ebook-searcher-app/tests/unit/controllers/it-ebooks-datasource-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\"controller:it-ebooks-datasource\", {});\n\n    test(\"it exists\", function(assert) {\n      var controller;\n      controller = this.subject();\n      return assert.ok(controller);\n    });\n  });//# sourceURL=ebook-searcher-app/tests/unit/controllers/it-ebooks-datasource-test.js");

;eval("define(\"ebook-searcher-app/tests/unit/controllers/join-datasource-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\"controller:join-datasource\", {});\n\n    test(\"it exists\", function(assert) {\n      var controller;\n      controller = this.subject();\n      return assert.ok(controller);\n    });\n  });//# sourceURL=ebook-searcher-app/tests/unit/controllers/join-datasource-test.js");

;eval("define(\"ebook-searcher-app/tests/unit/routes/it-ebooks-datasource-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\"route:it-ebooks-datasource\", {});\n\n    test(\"it exists\", function(assert) {\n      var route;\n      route = this.subject();\n      return assert.ok(route);\n    });\n  });//# sourceURL=ebook-searcher-app/tests/unit/routes/it-ebooks-datasource-test.js");

;eval("define(\"ebook-searcher-app/tests/unit/routes/join-datasource-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\"route:join-datasource\", {});\n\n    test(\"it exists\", function(assert) {\n      var route;\n      route = this.subject();\n      return assert.ok(route);\n    });\n  });//# sourceURL=ebook-searcher-app/tests/unit/routes/join-datasource-test.js");

;eval("define(\"ebook-searcher-app/tests/unit/routes/text-print-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\"route:text-print\", {});\n\n    test(\"it exists\", function(assert) {\n      var route;\n      route = this.subject();\n      return assert.ok(route);\n    });\n  });//# sourceURL=ebook-searcher-app/tests/unit/routes/text-print-test.js");

;eval("define(\"ebook-searcher-app/tests/unit/routes/text-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n    moduleFor(\"route:text\", {});\n\n    test(\"it exists\", function(assert) {\n      var route;\n      route = this.subject();\n      return assert.ok(route);\n    });\n  });//# sourceURL=ebook-searcher-app/tests/unit/routes/text-test.js");

/* jshint ignore:start */

define('ebook-searcher-app/config/environment', ['ember'], function(Ember) {
  var prefix = 'ebook-searcher-app';
/* jshint ignore:start */

try {
  var metaName = prefix + '/config/environment';
  var rawConfig = Ember['default'].$('meta[name="' + metaName + '"]').attr('content');
  var config = JSON.parse(unescape(rawConfig));

  return { 'default': config };
}
catch(err) {
  throw new Error('Could not read config from meta tag with name "' + metaName + '".');
}

/* jshint ignore:end */



});

if (runningTests) {
  require("ebook-searcher-app/tests/test-helper");
} else {
  require("ebook-searcher-app/app")["default"].create({"LOG_ACTIVE_GENERATION":true,"LOG_VIEW_LOOKUPS":true});
}



/* jshint ignore:end */
